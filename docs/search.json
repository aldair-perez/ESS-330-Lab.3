[
  {
    "objectID": "lab-03.html",
    "href": "lab-03.html",
    "title": "Lab-03",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric"
  },
  {
    "objectID": "lab-03.html#part-2.-the-structure-of-the-filtered-data-is-19-columns-with-3195-rows.-there-are-3-chr-10-int-and-6-num-columns.",
    "href": "lab-03.html#part-2.-the-structure-of-the-filtered-data-is-19-columns-with-3195-rows.-there-are-3-chr-10-int-and-6-num-columns.",
    "title": "Lab-03",
    "section": "Part 2.) The structure of the filtered data is 19 columns with 3195 rows. There are 3 chr, 10 int, and 6 num columns.",
    "text": "Part 2.) The structure of the filtered data is 19 columns with 3195 rows. There are 3 chr, 10 int, and 6 num columns.\n\ncolorado_data &lt;- population_data %&gt;%\n     filter(STNAME == \"Colorado\")\n\npopulation_range &lt;- range(colorado_data$POPESTIMATE2021, na.rm = TRUE)\n\n\n5811596 - 741\n\n[1] 5810855"
  },
  {
    "objectID": "lab-03.html#part-3.-the-population-range-in-colorado-in-2021-is-5810855.",
    "href": "lab-03.html#part-3.-the-population-range-in-colorado-in-2021-is-5810855.",
    "title": "Lab-03",
    "section": "Part 3.) The population range in Colorado in 2021 is 5810855.",
    "text": "Part 3.) The population range in Colorado in 2021 is 5810855.\n\nmerged_data &lt;- population_data_selected %&gt;%\n  left_join(colorado_data, by = \"FIP\")\n\nmerged_data &lt;- merged_data %&gt;%\n  mutate(\n    per_capita_cumulative_cases = DEATHS2021.x / POPESTIMATE2021.x,\n    per_capita_new_cases = NPOPCHG2021.x / POPESTIMATE2021.x,\n    per_capita_new_deaths = RDEATH2021.x / POPESTIMATE2021.x\n  )\n\n\ntable_cumulative_cases &lt;- merged_data %&gt;%\n  mutate(per_capita_cumulative_cases = DEATHS2021.x / POPESTIMATE2021.x) %&gt;%\n  arrange(desc(per_capita_cumulative_cases)) %&gt;%\n  select(STNAME.x, CTYNAME.x, per_capita_cumulative_cases) %&gt;%\n  head(5) %&gt;%\n  mutate(caption = \"Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\")\nprint(table_cumulative_cases)\n\n  STNAME.x       CTYNAME.x per_capita_cumulative_cases\n1    Texas   Loving County                  0.05555556\n2   Kansas  Kingman County                  0.03415169\n3    Texas    Foard County                  0.03125000\n4    Texas     Kent County                  0.03074866\n5    Texas McMullen County                  0.03040541\n                                                                 caption\n1 Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\n2 Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\n3 Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\n4 Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\n5 Top 5 Counties with the Most Cumulative Cases Per Capita on 2021-01-01\n\n\n\ntable_new_cases &lt;- merged_data %&gt;%\n  mutate(per_capita_new_cases = NPOPCHG2021.x / POPESTIMATE2021.x) %&gt;%\n  arrange(desc(per_capita_new_cases)) %&gt;%\n  select(STNAME.x, CTYNAME.x, per_capita_new_cases) %&gt;%\n  head(5) %&gt;%\n  mutate(caption = \"Top 5 Counties with the Most New Cases Per Capita on 2021-01-01\")\nprint(table_new_cases)\n\n       STNAME.x        CTYNAME.x per_capita_new_cases\n1 Massachusetts Hampshire County           0.10122113\n2      Nebraska    Blaine County           0.07575758\n3         Texas     Garza County           0.07210081\n4         Texas   Kaufman County           0.07057538\n5      Colorado    Custer County           0.06715386\n                                                          caption\n1 Top 5 Counties with the Most New Cases Per Capita on 2021-01-01\n2 Top 5 Counties with the Most New Cases Per Capita on 2021-01-01\n3 Top 5 Counties with the Most New Cases Per Capita on 2021-01-01\n4 Top 5 Counties with the Most New Cases Per Capita on 2021-01-01\n5 Top 5 Counties with the Most New Cases Per Capita on 2021-01-01"
  },
  {
    "objectID": "lab-03.html#part-5.-the-top-5-counties-for-cumulative-data-per-capita-are-loving-kingman-foard-kent-and-mcmullen.-the-top-5-counties-for-new-cases-per-data-are-hampshire-blaine-garza-kaufman-and-custer.",
    "href": "lab-03.html#part-5.-the-top-5-counties-for-cumulative-data-per-capita-are-loving-kingman-foard-kent-and-mcmullen.-the-top-5-counties-for-new-cases-per-data-are-hampshire-blaine-garza-kaufman-and-custer.",
    "title": "Lab-03",
    "section": "Part 5.) The top 5 counties for cumulative data per capita are Loving, Kingman, Foard, Kent, and McMullen. The top 5 counties for new cases per data are Hampshire, Blaine, Garza, Kaufman, and Custer.",
    "text": "Part 5.) The top 5 counties for cumulative data per capita are Loving, Kingman, Foard, Kent, and McMullen. The top 5 counties for new cases per data are Hampshire, Blaine, Garza, Kaufman, and Custer."
  },
  {
    "objectID": "lab-03.html#question-5",
    "href": "lab-03.html#question-5",
    "title": "Lab-03",
    "section": "Question 5",
    "text": "Question 5\n\nlibrary(ggplot2)\n\nnew_merged_data &lt;- merged_data %&gt;%\n  mutate(covid_death_ratio = RDEATH2021.y / DEATHS2021.x)\n\ncounties_20_percent_or_more &lt;- new_merged_data %&gt;%\n  filter(covid_death_ratio &gt;= 0.20) %&gt;%\n  select(STNAME.x, CTYNAME.x, covid_death_ratio)\n\nggplot(counties_20_percent_or_more, aes(x = reorder(CTYNAME.x, covid_death_ratio), y = covid_death_ratio)) +\n  geom_bar(stat = \"identity\", fill = \"orange\") +\n  labs(title = \"Counties where COVID deaths account for 20% or more of total deaths in 2021\",\n       x = \"County\",\n       y = \"COVID Deaths as a Proportion of Total Deaths\") +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "lab-03.html#question-6",
    "href": "lab-03.html#question-6",
    "title": "Lab-03",
    "section": "Question 6",
    "text": "Question 6\n\nstate_covid &lt;- data %&gt;%\n     group_by(date, state) %&gt;%\n     summarise(cases = sum(cases), .groups = \"drop\")\n\nstate_covid_filtered &lt;- state_covid %&gt;%\n     filter(state %in% c(\"New York\", \"Ohio\", \"Colorado\", \"Alabama\"))\nstate_covid_filtered &lt;- state_covid_filtered %&gt;%\n     group_by(state) %&gt;%\n     mutate(newCases = cases - lag(cases),\n            roll = zoo::rollmean(newCases, k = 7, align = \"right\", fill = NA)) %&gt;%\n     ungroup()\nstate_covid_filtered_clean &lt;- na.omit(state_covid_filtered)\n\nggplot(state_covid_filtered_clean, aes(x = date)) +\n     geom_col(aes(y = newCases), fill = \"orange\", col = NA) +\n     geom_line(aes(y = roll, group = state), col = \"darkblue\", linewidth = 1) +\n     theme_linedraw() +\n     facet_wrap(~state, nrow = 2, scales = \"free_y\") +\n     labs(title = \"Cumulative COVID Cases\", x = \"Date\", y = \"Case Count\")\n\n\n\n\n\n\n\n\n\npopulation_data_filter &lt;- population_data %&gt;%\n     group_by(STNAME) %&gt;%\n     summarise(state_pop = sum(POPESTIMATE2021)) %&gt;%\n     inner_join(state_covid_filtered, by = c(\"STNAME\" = \"state\")) %&gt;%\n     mutate(perCap = newCases / state_pop) %&gt;%\n     group_by(STNAME) %&gt;%\n     mutate(roll = zoo::rollmean(perCap, k = 7, align = \"right\", fill = NA)) %&gt;%\n     ungroup()\npopulation_data_filter_clean &lt;- na.omit(population_data_filter)\n\nmean(population_data_filter_clean$roll)\n\n[1] 0.0001570595\n\n0.0001570595\n\n[1] 0.0001570595\n\nsum(population_data_filter_clean$newCases)\n\n[1] 10708012\n\n10708012\n\n[1] 10708012\n\nsum(population_data$POPESTIMATE2021)\n\n[1] 664097954\n\n664097954\n\n[1] 664097954\n\n10708012 / 664097954\n\n[1] 0.01612415\n\n0.01612415\n\n[1] 0.01612415\n\n\nPart 3.) The newCases/totalpopulation in 2021 is 0.016124. The 7-day rolling mean is 0.000157.\n\nggplot(population_data_filter_clean, aes(x = date)) +\n   geom_line(aes(y = roll, col = STNAME, group = STNAME), linewidth = 1) +\n   theme_linedraw() +\n   labs(\n     title = \"Cumulative COVID-19 Cases\",\n     x = \"Date\",\n     y = \"Cases\"\n   )\n\n\n\n\n\n\n\n\nPart 5.) Scaling by population showed us that some states had similar fluctuations in COVID cases overtime, and there was a period where there’s a sharp spike in cases.\n#Q7\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nreadr::read_csv(\"https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv\")\n\nRows: 3221 Columns: 3\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): fips\ndbl (2): LON, LAT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 3,221 × 3\n   fips     LON   LAT\n   &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;\n 1 01061  -85.8  31.1\n 2 08125 -102.   40.0\n 3 17177  -89.7  42.4\n 4 28153  -88.7  31.6\n 5 34041  -75.0  40.9\n 6 46051  -96.8  45.2\n 7 51013  -77.1  38.9\n 8 21007  -89.0  37.1\n 9 37091  -77.0  36.4\n10 13057  -84.5  34.2\n# ℹ 3,211 more rows\n\nspace_data_url &lt;- 'https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv'\ncentroid_data &lt;- read_csv(space_data_url)\n\nRows: 3221 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): fips\ndbl (2): LON, LAT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata$fips &lt;- as.character(data$fips)\nmerged_data &lt;- left_join(data, centroid_data, by = \"fips\")\nmerged_data &lt;- na.omit(merged_data)\n\nmerged_data$date &lt;- as.Date(merged_data$date)\nmerged_data$month &lt;- format(merged_data$date, \"%m\")\n\ntotal_cases_day &lt;- merged_data %&gt;%\n  group_by(date) %&gt;%\n  summarise(total_cases = sum(cases, na.rm = TRUE))\n\ntotal_cases_month &lt;- merged_data %&gt;%\n  group_by(month) %&gt;%\n  summarise(total_cases = sum(cases, na.rm = TRUE))\n\nweighted_mean_coordinates &lt;- merged_data %&gt;%\n  group_by(date) %&gt;%\n  summarise(\n    weighted_mean_LON = sum(LON * cases, na.rm = TRUE) / sum(cases, na.rm = TRUE),\n    weighted_mean_LAT = sum(LAT * cases, na.rm = TRUE) / sum(cases, na.rm = TRUE)\n  )\n\nweighted_mean_coordinates$month &lt;- format(weighted_mean_coordinates$date, \"%m\")\n\nresult_data &lt;- weighted_mean_coordinates %&gt;%\n  left_join(total_cases_day, by = \"date\") %&gt;%\n  left_join(total_cases_month, by = \"month\")\n\nggplot(data = result_data) +\n     borders(\"state\", fill = \"darkgreen\", colour = \"darkblue\") +\n     geom_point(aes(x = weighted_mean_LON, y = weighted_mean_LAT, \n                    colour = month, size = total_cases.x), \n             alpha = 0.7,\n             shape = 16) +\n     scale_size_continuous(name = \"Total Cases\", range = c(1, 10)) +\n     coord_fixed(ratio = 1) +\n     theme_minimal() +\n     labs(title = \"Weighted Mean Centers of Cases by Month\",\n       x = \"Longitude\",\n       y = \"Latitude\")\n\n\n\n\n\n\n\n\nThe COVID cases are higher in middle Eastern part of the U.S. However, in my experience, the COVID hot-spots are in high population density, like NYC, Denver, LA, Houston, and Chicago."
  }
]